[GENERAL]
## The following options are only ckecked for their type
## use type-name if you want to enforce type conversion on a parameter
## example:
## int-param1 = 10 creates a variable param1 of type int with value 10
## By contrast, param1 = 10 gives a variable param1 of type str with value '10'
## Possible types: int, float, bool, list.
## list type will chop the string by commas. Eg. list-ff=a,b will become a list ff=['a','b']

# Set simulation options
mdnetcdf = 1                  # 1 (write trajectory in nc format) or 0 (write in ascii format)
restrMode = FREE            # Restraining scheme: FREE, HA (heavy atoms) or BB (backbone only)
float-restrForce = 0.0      # Restraining force if applicable. Default 0 kcal/mol.A^2
int-nanos = 20              # Production length in nanoseconds. Default: 20ns
float-temp = 300            # Simulation temperature. Default = 300K
mdProgram = AMBER           # Default simulation program. Options: AMBER or NAMD currently
int-trajfrequency = 500     # Trajectory writing frequency  = 1000 snapshots per nanosecond = int-production_nsteps / int-trajfrequency
int-minsteps = 5000				# Number of minimization steps to run
int-heating_steps = 100000                      # Heating steps for each file. 100.000 steps = 200ps
float-parm_heating_tempi = 100 			# Start heating at 100 K
int-npt_eq_steps = 500000                       # 1ns equilibration at NPT
int-nvt_prod_steps = 500000                     # 1ns production files = nvt_prod_steps*(md_timestep/10e6)
float-md_timestep = 2                           # 2 fs timestep
int-namd_heating_steps = 500000                 # 1ns equilibration total time to increase temperature from float-heating_tempi to float-temp in NAMD
list-FF = leaprc.ff99SB, leaprc.gaff            # Default forcefield files to load when opening tLeap

# DEFINE REFERENCE STRUCTURE FOR RESTRAINED SIMULATIONS
# If 1: Use output of minimization as reference structure to set positional restraints.
# If 0: (default) use initial input structure (CRD file) as reference state.
int-minimizationAsRef = 0

# Set filepaths
mdfolder = md               # Name for the production folder
eqfolder = eq               # Name for equilibration folder
minfolder = min             # Name for minimization folder
alignfolder = align         # Name for folder containing aligned trajectory
energyfolder = egrids       # Name for folder containing energy grids
densityfolder = dgrids      # Folder containing density/occupancy grids

# Next option is a string to be converted to trajectory file names in production and equilibration files.
# Always include {step} and {extension} keywords.
# Example:    md{step}.{extension}    (DEFAULT)
# Will be:    md1.nc  if netcdf used and is 1st file of production.
#
mdoutfiletemplate = md{step}.{extension}
eqoutfiletemplate = eq{step}.{extension}

# Expected trajetory file extensions
list-avail_trajext = nc, netcdf, x, x.gz, dcd
