##
## pyMDMix --- http://mdmix.sourceforge.net
## Software for preparation, analysis and quality control
## of solvent mixtures molecular dynamics
##
## This program is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License as
## published by the Free Software Foundation; either version 3 of the
## License, or any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
## General Public License for more details.
##
## You find a copy of the GNU General Public License in the file
## license.txt along with this program; if not, write to the Free
## Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
##
## Please cite your use of pyMDMix in published work:
##
##    TOBEPUBLISHED
##

The program is distributed under GNU GPLv3 license. Find the license file
under Licenses/ folder.

DOCUMENTATION
=============
All documentation on program usage is online at
http://mdmix.sourceforge.net

Installation instructions and usage commands are there
explained.

Here I will give a brief explanation on installation.

INSTALLATION
============

1- Dependencies
---------------
Before installing the program, all dependencies must be fulfilled.
As stated in the installation website, most of the dependencies
will be automatically installed but these 2:

1) Ambertools. Is the main workhorse where the program has been built upon.
2) Biskit and ScientificPython. Biskit is a python module that manages PDBs very efficiently.
  Its automatic installation fails and that's why the user has to install 
  it beforehand. Scientific Python which is a dependency of pyMDMix is also
  a dependency for Biskit. I recommend to install it with NetCDF support.

Once these 3 dependencies are installed, these other list will be automatically installed:

- scipy
- numpy
- matplotlib

If they are not, install them manually.

2 - Installation process
------------------------
In main source code folder, type:

   > python setup.py install

This might require admin privileges. You can 
install a local copy without admin privileges with:

   > python setup.py install --user

3 - Testing
-----------
Test if the python module has been correctly installed:
	Move to any folder in your system and init a python shell:
		> python
	Inside the python shell:
		>>> import pyMDMix
	If this loads correctly you should see no error message.

Test if the executable user interface has been corectly installed:
	In any folder type at the shell prompt:
		> mdmix -h
	This should print a help message.

Test the program works correctly:
	Move again to the package source directory and type:
		> python pyMDMix/test.py all
	This will run a series of source code checks.
	No test should fail.

4 - Enjoy!
----------
Read program usage at online documentation.


UPDATES
--------
26/01/2015
- Fixed plotting to take selected steps (when simulation is not finished but we want to plot some data).

20/01/2015
- Fixed compatibility issues with python2.6
- Fixed compatibility issues with cpptraj
